buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.8.3"
    id "com.diffplug.gradle.spotless" version "3.1.0"
    id "de.undercouch.download" version "3.4.3"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'javafx-gradle-plugin'

// Master gradle file:
apply from: 'https://github.com/ClearControl/master/blob/master/master.gradle?raw=true'

//***********************************************************************************
// JAVA CODE BUILDING

sourceSets {
    main
    {
        java
        { srcDir 'src/java' }
        resources
        { srcDir 'src/java' }
    }
    test
    {
        java
        { srcDir 'src/java' }
        resources
        { srcDir 'src/java' }
    }
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

test 
{
    testLogging.showStandardStreams = true
    testLogging
    { events "passed", "skipped", "failed" }

    exclude '**/demo/**'
    exclude '**/run/**'

    maxHeapSize = "16G"
}

dependencies 
{
    
    // JUnit:
    compile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // ClearCL:
    compile ('net.clearcontrol:simbryo:'+project.ext.versionsMap["simbryo"]) {transitive= true; changing= true}
    
}


repositories 
{
    // main repos:
    mavenLocal()
    mavenCentral()
    maven { url "http://oss.sonatype.org/content/groups/public"} 
    maven { url "http://mvnrepository.com/artifact" }

    // ClearControl:
    maven { url  "http://dl.bintray.com/clearcontrol/ClearControl"  }

    // ClearVolume: 
    maven { url  "http://dl.bintray.com/clearvolume/ClearVolume"  }
    maven { url "http://dl.bintray.com/haesleinhuepf/snapshots" }
    
    // Sqeazy:
    maven {url  "http://dl.bintray.com/psteinb/maven" }
    
    // ImageJ repo:
    maven {url  "http://maven.imagej.net/content/repositories/releases/"}
    
    // Bioformats:
    maven {url "http://artifacts.openmicroscopy.org/artifactory/maven"}
    maven { url "https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases" }

}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
  }


//***********************************************************************************

// PUBLISHING


group   = project.ext.groupname
version = project.ext.versionsMap[project.name]


artifacts
{
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar { classifier "sources" }
        }
    }
}
